/*
3. Create a Product class and convert Product type to Item type using constructor
int main()
{
Item i1;
Product p1;
p1.setData(3,4);
i1=p1;
return 0;
}



note: i=p if  using constructor  then constructor should be create in left one class and when using cast operator cast operator should
be create in right class*/



#include <iostream>
using namespace std;

class Product{
    
    int p, q;
 
    
    public:
    
    void setData(int a, int b)
    {
        p=a;
        q=b;
        
    }
        void Display()
        {
            cout<<"p= "<<p<<endl;
             cout<<"q= "<<q<<endl;
        }
   
    int getP()
    {
        return p;
    }
    
    int getQ()
    {
        return q;
    }
};

class Item{
     int i,j ;
     
     
     public:
      void Display()
        {
            cout<<"i = "<<i<<endl;
            cout<<"j = "<<j<<endl;
        }
         Item()
        {
            
        }
             
            Item(Product x)
        {
           i=x.getP();     //bcoz we cant get access private member of product class using x.p and x.q so we had to createfunction get p and get q tp access them
           j=x.getQ();
        }
};



int main()
    {
        Item i1;
        Product p1;
        p1.setData(3,4);

       i1=p1;  //converting primittive to primittive and assigning to i1(primittive)
        i1.Display();
        return 0;
    }
